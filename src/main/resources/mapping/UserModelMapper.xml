<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zte.dianping.dao.UserModelMapper">
  <resultMap id="BaseResultMap" type="com.zte.dianping.model.UserModel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created_dt" jdbcType="TIMESTAMP" property="createdDt" />
    <result column="updated_dt" jdbcType="TIMESTAMP" property="updatedDt" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created_dt, updated_dt, telphone, password, nick_name, gender
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zte.dianping.model.UserModel" keyProperty="id" useGeneratedKeys="true">
    insert into tb_user (id, created_dt, updated_dt, 
      telphone, password, nick_name, 
      gender)
    values (#{id,jdbcType=INTEGER}, #{createdDt,jdbcType=TIMESTAMP}, #{updatedDt,jdbcType=TIMESTAMP}, 
      #{telphone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zte.dianping.model.UserModel" keyProperty="id" useGeneratedKeys="true">
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdDt != null">
        created_dt,
      </if>
      <if test="updatedDt != null">
        updated_dt,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdDt != null">
        #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDt != null">
        #{updatedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zte.dianping.model.UserModel">
    update tb_user
    <set>
      <if test="createdDt != null">
        created_dt = #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDt != null">
        updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="telphone != null">
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zte.dianping.model.UserModel">
    update tb_user
    set created_dt = #{createdDt,jdbcType=TIMESTAMP},
      updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
      telphone = #{telphone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPhoneAndPassword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_user
    where
    telphone = #{telphone,jdbcType=VARCHAR} and
    password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="countAllUser" resultType="java.lang.Integer">
    select count(*) from tb_user;
  </select>
</mapper>